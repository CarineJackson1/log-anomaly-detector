name: Scan Pipeline

on:
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  security-scans:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install tools
        run: |
          pip install bandit semgrep
          npm install -g retire
          sudo apt-get install jq -y

      - name: 📦 Run Semgrep backend scan (Python)
        run: semgrep --config=p/ci/python --json --output=security-reports/raw/semgrep-backend.json backend || true

      - name: 📦 Run Semgrep frontend scan (JS/TS)
        run: semgrep --config=p/react --json --output=security-reports/raw/semgrep-frontend.json frontend || true

      - name: 🧠 Generate Combined Semgrep Markdown Report
        run: python scripts/generate_full_report.py \
          security-reports/raw/semgrep-frontend.json \
          security-reports/raw/semgrep-backend.json \
          security-reports/summary_report.md

      - name: 📤 Upload summary report
        uses: actions/upload-artifact@v4
        with:
          name: summary-report
          path: security-reports/summary_report.md

      - name: 💬 Post PR comment with summary
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('security-reports/summary_report.md', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🔐 Combined Semgrep Report\n\n${summary}`
            });
