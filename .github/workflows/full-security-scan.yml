name: 🛡️ Full Security Scan Pipeline

on:
  pull_request:
    branches: [main, develop]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Full Security Checks
    steps:
      - name: 👋 Checkout repository
        uses: actions/checkout@v3

      - name: ⚖️ Setup Python for Semgrep
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: 📁 Install required tools
        run: |
          pip install semgrep bandit
          npm install -g retire

      - name: 🔎 Semgrep Frontend Scan
        run: semgrep --config .github/semgrep/frontend-rules.yml frontend --json > security-reports/raw/semgrep-frontend.json

      - name: 🔎 Semgrep Backend Scan
        run: semgrep --config .github/semgrep/backend-rules.yml backend --json > security-reports/raw/semgrep-backend.json

      - name: 🔧 Bandit Python Security Scan
        run: bandit -r backend -f json -o security-reports/raw/bandit-backend.json

      - name: 🚀 Retire.js Dependency Scan
        run: retire --path frontend --outputformat json --outputpath security-reports/raw/retire-frontend.json || true

      - name: 🔊 OWASP ZAP Baseline Scan
        run: |
          docker run \
            --rm \
            -v $(pwd):/zap/wrk:rw \
            -t ghcr.io/zaproxy/zap-stable \
            zap-baseline.py \
            -t https://secdevops-demo-frontend.onrender.com \
            -r zap_report.html || true

          mkdir -p security-reports/raw
          mv zap_report.html security-reports/raw/zap-report.html

      - name: 📂 Upload scan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-reports
          path: |
            security-reports/raw/semgrep-frontend.json
            security-reports/raw/semgrep-backend.json
            security-reports/raw/bandit-backend.json
            security-reports/raw/retire-frontend.json
            security-reports/raw/zap-report.html

      - name: 📄 Generate markdown summary
        run: |
          python .github/scripts/generate_summary.py

      - name: 📈 Upload summary markdown
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-reports/summary_report.md

      - name: 📉 Post summary comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            function commentLink(label, path) {
              return fs.existsSync(path)
                ? `\n✅ ${label}: [View report artifact](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID})`
                : `\n❌ ${label} report not found.`;
            }

            const summary = `## 📈 Security Scan Summary` +
              commentLink('Semgrep Frontend', 'security-reports/raw/semgrep-frontend.json') +
              commentLink('Semgrep Backend', 'security-reports/raw/semgrep-backend.json') +
              commentLink('Bandit Backend', 'security-reports/raw/bandit-backend.json') +
              commentLink('Retire.js', 'security-reports/raw/retire-frontend.json') +
              commentLink('OWASP ZAP', 'security-reports/raw/zap-report.html');

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary,
            });
