name: Full Security Scan Pipeline

on:
  pull_request:
    branches: [main, develop]

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  security-scans:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install security tools
        run: |
          pip install semgrep bandit beautifulsoup4 reportlab

      - name: Run Bandit scan
        run: bandit -r backend -f json -o security-reports/raw/bandit-report.json || true

      - name: Run Semgrep frontend scan
        run: semgrep --config .github/semgrep/frontend-rules.yml frontend --json > security-reports/raw/semgrep-frontend.json || true

      - name: Run Semgrep backend scan
        run: semgrep --config .github/semgrep/backend-rules.yml backend --json > security-reports/raw/semgrep-backend.json || true

      - name: Run Retire.js scan
        run: retire --path frontend --outputformat json --outputpath security-reports/raw/retire-frontend.json || true

      - name: Run Gitleaks scan
        run: gitleaks detect --source . --report-format json --report-path security-reports/raw/gitleaks-report.json || true

      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          format: json
          output: security-reports/raw/trivy-report.json
          scan-type: fs
          scan-path: .

      - name: Upload raw scan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: raw-scan-results
          path: security-reports/raw/

      - name: Generate combined summary report
        run: python .github/scripts/generate_full_report.py \
          --bandit security-reports/raw/bandit-report.json \
          --semgrep-frontend security-reports/raw/semgrep-frontend.json \
          --semgrep-backend security-reports/raw/semgrep-backend.json \
          --gitleaks security-reports/raw/gitleaks-report.json \
          --retire security-reports/raw/retire-frontend.json \
          --trivy security-reports/raw/trivy-report.json \
          --zap security-reports/raw/zap-report.html \
          --output security-reports/summary_report.md

      - name: Upload combined report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: summary-report
          path: |
            security-reports/summary_report.md
            security-reports/summary_report.pdf

      - name: Comment report on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('security-reports/summary_report.md', 'utf8');
            if (context.issue.number) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## üîê Security Scan Summary\n\n${summary}`
              });
            } else {
              console.log("No PR number found, skipping comment.");
            }
