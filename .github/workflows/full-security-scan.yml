name: Full Security Scan

on:
  pull_request:
    branches: [ develop, main ]

jobs:
  security-scans:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies for scanning and reporting
        run: |
          pip install semgrep beautifulsoup4 reportlab bandit

      - name: Run Semgrep Frontend Scan
        run: semgrep --config=p/react --json --output=security-reports/semgrep/frontend/react.json ./frontend/src || true

      - name: Run Semgrep Backend Scan
        run: semgrep --config=p/ci/python --json --output=security-reports/semgrep/backend/raw.json backend || true

      - name: Run Bandit Scan
        run: bandit -r backend -f json -o security-reports/raw/bandit-report.json || true

      # Add other scans here: Gitleaks, Retire.js, Trivy, OWASP ZAP, etc.
      # Ensure outputs saved to security-reports/raw/ or respective folders

      - name: Generate combined security report (MD + PDF)
        run: |
          python .github/scripts/generate_full_report.py \
            --semgrep-frontend security-reports/semgrep/frontend/react.json \
            --semgrep-backend security-reports/semgrep/backend/raw.json \
            --bandit security-reports/raw/bandit-report.json \
            --gitleaks security-reports/raw/gitleaks-report.json \
            --retire security-reports/raw/retire-frontend.json \
            --trivy security-reports/raw/trivy-report.json \
            --zap security-reports/raw/zap-report.html \
            --output security-reports/summary_report.md

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            security-reports/summary_report.md
            security-reports/summary_report.pdf
            security-reports/raw/

      - name: Post security report as PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const md = fs.readFileSync('security-reports/summary_report.md', 'utf8');
            if (context.payload.pull_request) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `## üîê Security Scan Summary\n\n${md}`
              });
            } else {
              console.log("No PR context, skipping comment.");
            }
