name: Dependabot PR CI - Astroskills LMS

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches:
      - develop
    paths-ignore:
      - '**.md'

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  security-scan:
    name: Security Scan (Safe Dependabot)
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout base code (safe)
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}

      - name: 🔧 Set up Python & Node
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 🔐 Install security tools
        run: |
          pip install semgrep bandit reportlab beautifulsoup4
          npm install -g gitleaks retire trivy

      - name: 🕵️ Run Semgrep React Scan
        run: semgrep --config p/react --json --output semgrep-frontend-react.json frontend/src || true

      - name: 🕵️ Run Semgrep TS Scan
        run: semgrep --config p/typescript --json --output semgrep-frontend-ts.json frontend/src || true

      - name: 🕵️ Run Semgrep Backend Scan
        run: semgrep --config p/ci/python --json --output semgrep-backend.json backend || true

      - name: 🔍 Run Bandit Backend Scan
        run: bandit -r backend -f json -o bandit-report.json || true

      - name: 🔐 Run Gitleaks Scan
        run: gitleaks detect --source . --report-format json --report-path gitleaks-report.json || true

      - name: 🧱 Run Retire.js Scan
        run: retire --path frontend --outputformat json --outputpath retire-frontend.json || true

      - name: 🐳 Run Trivy Scan
        run: trivy fs --format json --output trivy-report.json . || true

      - name: 📄 Organize reports
        run: |
          mkdir -p security-reports/raw
          mv *.json security-reports/raw/

      - name: 🧠 Generate Markdown Report and Detect Critical Issues
        id: generate
        run: |
          python .github/scripts/generate_full_report.py \
            --bandit security-reports/raw/bandit-report.json \
            --semgrep-frontend-react security-reports/raw/semgrep-frontend-react.json \
            --semgrep-frontend-ts security-reports/raw/semgrep-frontend-ts.json \
            --semgrep-backend security-reports/raw/semgrep-backend.json \
            --gitleaks security-reports/raw/gitleaks-report.json \
            --retire security-reports/raw/retire-frontend.json \
            --trivy security-reports/raw/trivy-report.json \
            --output security-reports/summary_report.md || true

          echo "CRITICAL_ISSUES=$(grep -q '❌ Critical' security-reports/summary_report.md && echo true || echo false)" >> $GITHUB_ENV

      - name: ☁️ Upload report artifacts
        if: env.CRITICAL_ISSUES == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: security-reports/

      - name: 🗨️ Post PR summary comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const MAX_CHARS = 60000;
            const summaryPath = 'security-reports/summary_report.md';

            if (!fs.existsSync(summaryPath)) {
              core.warning("No report found.");
              return;
            }

            const summary = fs.readFileSync(summaryPath, 'utf8');
            const truncated = summary.length > MAX_CHARS ? summary.slice(0, MAX_CHARS) + "\n\n...truncated" : summary;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🔐 Dependabot Security Scan Summary\n\n${truncated}`
            });

      - name: 🚨 Label PR if critical issues found
        if: env.CRITICAL_ISSUES == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['security-review-needed']
            });

      - name: ❌ Auto-close PR if critical issues found
        if: env.CRITICAL_ISSUES == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              state: 'closed'
            });

  backend-tests:
    name: ✅ Backend Tests (if exist)
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: ✅ Run backend tests
        run: |
          cd backend
          if ls tests/test_*.py 1> /dev/null 2>&1; then
            pip install -r requirements.txt
            pytest tests/
          else
            echo "🟡 No backend tests found, skipping."
